//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NBU.PayBill.Salary.EmpWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmpWebService.IEmpWebService")]
    public interface IEmpWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/IsValidUser", ReplyAction="http://tempuri.org/IEmpWebService/IsValidUserResponse")]
        string IsValidUser(string userID, string userPassword, string applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/IsValidUser", ReplyAction="http://tempuri.org/IEmpWebService/IsValidUserResponse")]
        System.Threading.Tasks.Task<string> IsValidUserAsync(string userID, string userPassword, string applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetEmpAccessByApplication", ReplyAction="http://tempuri.org/IEmpWebService/GetEmpAccessByApplicationResponse")]
        string GetEmpAccessByApplication(string empId, string appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetEmpAccessByApplication", ReplyAction="http://tempuri.org/IEmpWebService/GetEmpAccessByApplicationResponse")]
        System.Threading.Tasks.Task<string> GetEmpAccessByApplicationAsync(string empId, string appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetEmpDetailByEmpId", ReplyAction="http://tempuri.org/IEmpWebService/GetEmpDetailByEmpIdResponse")]
        string GetEmpDetailByEmpId(string empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetEmpDetailByEmpId", ReplyAction="http://tempuri.org/IEmpWebService/GetEmpDetailByEmpIdResponse")]
        System.Threading.Tasks.Task<string> GetEmpDetailByEmpIdAsync(string empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetActiveEmployeeList", ReplyAction="http://tempuri.org/IEmpWebService/GetActiveEmployeeListResponse")]
        string GetActiveEmployeeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetActiveEmployeeList", ReplyAction="http://tempuri.org/IEmpWebService/GetActiveEmployeeListResponse")]
        System.Threading.Tasks.Task<string> GetActiveEmployeeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetEmpDependentListByEmpID", ReplyAction="http://tempuri.org/IEmpWebService/GetEmpDependentListByEmpIDResponse")]
        string GetEmpDependentListByEmpID(string empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetEmpDependentListByEmpID", ReplyAction="http://tempuri.org/IEmpWebService/GetEmpDependentListByEmpIDResponse")]
        System.Threading.Tasks.Task<string> GetEmpDependentListByEmpIDAsync(string empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetEmployerDetail", ReplyAction="http://tempuri.org/IEmpWebService/GetEmployerDetailResponse")]
        string GetEmployerDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpWebService/GetEmployerDetail", ReplyAction="http://tempuri.org/IEmpWebService/GetEmployerDetailResponse")]
        System.Threading.Tasks.Task<string> GetEmployerDetailAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpWebServiceChannel : NBU.PayBill.Salary.EmpWebService.IEmpWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpWebServiceClient : System.ServiceModel.ClientBase<NBU.PayBill.Salary.EmpWebService.IEmpWebService>, NBU.PayBill.Salary.EmpWebService.IEmpWebService {
        
        public EmpWebServiceClient() {
        }
        
        public EmpWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string IsValidUser(string userID, string userPassword, string applicationID) {
            return base.Channel.IsValidUser(userID, userPassword, applicationID);
        }
        
        public System.Threading.Tasks.Task<string> IsValidUserAsync(string userID, string userPassword, string applicationID) {
            return base.Channel.IsValidUserAsync(userID, userPassword, applicationID);
        }
        
        public string GetEmpAccessByApplication(string empId, string appId) {
            return base.Channel.GetEmpAccessByApplication(empId, appId);
        }
        
        public System.Threading.Tasks.Task<string> GetEmpAccessByApplicationAsync(string empId, string appId) {
            return base.Channel.GetEmpAccessByApplicationAsync(empId, appId);
        }
        
        public string GetEmpDetailByEmpId(string empId) {
            return base.Channel.GetEmpDetailByEmpId(empId);
        }
        
        public System.Threading.Tasks.Task<string> GetEmpDetailByEmpIdAsync(string empId) {
            return base.Channel.GetEmpDetailByEmpIdAsync(empId);
        }
        
        public string GetActiveEmployeeList() {
            return base.Channel.GetActiveEmployeeList();
        }
        
        public System.Threading.Tasks.Task<string> GetActiveEmployeeListAsync() {
            return base.Channel.GetActiveEmployeeListAsync();
        }
        
        public string GetEmpDependentListByEmpID(string empId) {
            return base.Channel.GetEmpDependentListByEmpID(empId);
        }
        
        public System.Threading.Tasks.Task<string> GetEmpDependentListByEmpIDAsync(string empId) {
            return base.Channel.GetEmpDependentListByEmpIDAsync(empId);
        }
        
        public string GetEmployerDetail() {
            return base.Channel.GetEmployerDetail();
        }
        
        public System.Threading.Tasks.Task<string> GetEmployerDetailAsync() {
            return base.Channel.GetEmployerDetailAsync();
        }
    }
}
